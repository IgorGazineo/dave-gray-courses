
Exerc√≠cios ‚Äì Aula 01 (Node.js B√°sico)

üìÅ Exerc√≠cio 1 ‚Äì Cria√ß√£o de Arquivo e Execu√ß√£o

‚úÖ Exemplo resolvido  
Arquivo: exemplo.js  
console.log('Este √© meu primeiro c√≥digo em Node.js!');

Execu√ß√£o no terminal:  
node exemplo.js

Sa√≠da esperada:  
Este √© meu primeiro c√≥digo em Node.js!

‚úçÔ∏è Agora √© com voc√™  
Tarefa: Crie um arquivo chamado hello.js que exiba a frase:  
Meu primeiro script com Node.js

üß† Exerc√≠cio 2 ‚Äì M√≥dulo os

‚úÖ Exemplo resolvido  
Arquivo: sistema.js  
const os = require('os');  
console.log('Sistema operacional:', os.type());  
console.log('Vers√£o:', os.version());  
console.log('Diret√≥rio do usu√°rio:', os.homedir());

Execu√ß√£o no terminal:  
node sistema.js

‚úçÔ∏è Agora √© com voc√™  
Tarefa: Crie um arquivo chamado meusistema.js que exiba:  
- O tipo do sistema operacional  
- A vers√£o do sistema  
- O diret√≥rio do usu√°rio

üìÇ Exerc√≠cio 3 ‚Äì M√≥dulo path

‚úÖ Exemplo resolvido  
Arquivo: caminho.js  
const path = require('path');  
console.log('Nome do arquivo:', path.basename(__filename));  
console.log('Diret√≥rio atual:', __dirname);  
console.log('Caminho completo:', __filename);

‚úçÔ∏è Agora √© com voc√™  
Tarefa: Crie um arquivo chamado meucaminho.js que exiba:  
- O nome do arquivo  
- O diret√≥rio atual  
- O caminho completo do arquivo

üß© Exerc√≠cio 4 ‚Äì M√≥dulo Personalizado

‚úÖ Exemplo resolvido  
Arquivo: math.js  
function add(a, b) {  
  return a + b;  
}  
function subtract(a, b) {  
  return a - b;  
}  
module.exports = { add, subtract };

Arquivo: app.js  
const math = require('./math');  
console.log('Soma:', math.add(5, 3));  
console.log('Subtra√ß√£o:', math.subtract(10, 4));

Execu√ß√£o:  
node app.js

‚úçÔ∏è Agora √© com voc√™  
Tarefa:  
1. Crie um arquivo chamado funcoes.js com duas fun√ß√µes:  
   - multiplica√ß√£o  
   - divis√£o  
2. Crie um arquivo chamado operacoes.js que importe essas fun√ß√µes e exiba o resultado da multiplica√ß√£o e da divis√£o de dois n√∫meros.

üîÅ Exerc√≠cio 5 ‚Äì Exporta√ß√£o alternativa com exports

‚úÖ Exemplo resolvido  
Arquivo: math.js  
exports.add = (a, b) => a + b;  
exports.subtract = (a, b) => a - b;

Arquivo: app.js  
const { add, subtract } = require('./math');  
console.log('Soma:', add(4, 2));  
console.log('Subtra√ß√£o:', subtract(7, 3));

Execu√ß√£o:  
node app.js

‚úçÔ∏è Agora √© com voc√™  
Tarefa:  
1. Altere o arquivo funcoes.js criado no exerc√≠cio anterior para usar `exports` ao inv√©s de `module.exports`.  
2. Atualize o arquivo operacoes.js para usar desestrutura√ß√£o na importa√ß√£o.  
3. Execute e teste se a multiplica√ß√£o e divis√£o ainda funcionam corretamente.

üß† Exerc√≠cio 6 ‚Äì Desafio b√¥nus com os e path

‚úÖ Exemplo resolvido  
Arquivo: info.js  
const os = require('os');  
const path = require('path');  
const sistema = os.type();  
const versao = os.version();  
const nomeArquivo = path.basename(__filename);  
const diretorio = __dirname;  
console.log(`Voc√™ est√° usando o sistema ${sistema} vers√£o ${versao}.`);  
console.log(`O script atual √© "${nomeArquivo}" localizado em "${diretorio}".`);

‚úçÔ∏è Agora √© com voc√™  
Tarefa: Crie um arquivo chamado detalhes.js que:  
- Use os m√≥dulos os e path  
- Exiba uma mensagem com as informa√ß√µes do sistema e do caminho do arquivo
